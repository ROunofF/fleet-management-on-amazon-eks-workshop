apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cluster-addons
  namespace: argocd
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  goTemplate: true
  goTemplateOptions:
    - missingkey=error
  generators:
  - clusters:
      selector:
        matchLabels:
          fleet_member: control-plane
      values:
        addonChart: gitops-bridge
  template:
    metadata:
      name: cluster-addons
    spec:
      project: default
      sources:
      - ref: values
        repoURL: '{{.metadata.annotations.addons_repo_url}}'
        targetRevision: '{{.metadata.annotations.addons_repo_revision}}'
      - repoURL: '{{.metadata.annotations.addons_repo_url}}'
        path: '{{.metadata.annotations.addons_repo_basepath}}charts/gitops-bridge'
        targetRevision: '{{.metadata.annotations.addons_repo_revision}}'
        helm:
          valuesObject:
            repoURLValuesBasePath: '{{.metadata.annotations.addons_repo_basepath}}'
            repoURLValuesRevision: '{{.metadata.annotations.addons_repo_revision}}'
            repoURLGitBasePath: '{{.metadata.annotations.addons_repo_basepath}}stacks/'
            repoURLGitRevision: '{{.metadata.annotations.addons_repo_revision}}'
            useSelector: true
            useStack: false
          ignoreMissingValueFiles: true
          valueFiles:
            - '$values/{{.metadata.annotations.addons_repo_basepath}}default/addons/{{.values.addonChart}}/values.yaml'
            - '$values/{{.metadata.annotations.addons_repo_basepath}}environments/{{.metadata.labels.environment}}/addons/{{.values.addonChart}}/values.yaml'
            - '$values/{{.metadata.annotations.addons_repo_basepath}}clusters/{{.name}}/addons/{{.values.addonChart}}/values.yaml'
            - '$values/{{.metadata.annotations.addons_repo_basepath}}tenants/{{.metadata.labels.tenant}}/default/addons/{{.values.addonChart}}/values.yaml'
            - '$values/{{.metadata.annotations.addons_repo_basepath}}tenants/{{.metadata.labels.tenant}}/environments/{{.metadata.labels.environment}}/addons/{{.values.addonChart}}/values.yaml'
            - '$values/{{.metadata.annotations.addons_repo_basepath}}tenants/{{.metadata.labels.tenant}}/clusters/{{.name}}/addons/{{.values.addonChart}}/values.yaml'
      - repoURL: '{{.metadata.annotations.addons_repo_url}}'
        path: '{{.metadata.annotations.addons_repo_basepath}}charts/passthrough'
        targetRevision: '{{.metadata.annotations.addons_repo_revision}}'
        helm:
          valuesObject:
            resources:
              secretStore:
                apiVersion: external-secrets.io/v1beta1
                kind: SecretStore
                metadata:
                  name:  aws-secrets-manager
                spec:
                  provider:
                    aws:
                      service: SecretsManager
                      region: '{{.metadata.annotations.aws_region}}'
                      secretsManager:
                        forceDeleteWithoutRecovery: true
      destination:
        namespace: argocd
        name: '{{.name}}'
      syncPolicy:
        automated:
          selfHeal: true
          allowEmpty: true
          prune: false
        retry:
          limit: 100
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true  # Big CRDs.